'''
定义一个smali文件中method，当考虑函数间的调用时，要考虑invoke具体调用的函数，
然后连接调用函数的起点操作码，被调用函数的返回操作码要连接回调用函数

通过调用opcodeGenerator中定义的方法来创建操作码图
'''
import networkx as nx
from OpcodeGenerator import single_opcode_graph_generator
from OpcodeGenerator import connect_opcode_graph_generator
from OpcodeGenerator import block_opcode_graph_generator


class SmaliMethod:

    # 初始化
    def __init__(self, method_name, method_line_list):
        self.method_name = method_name
        self.method_line_list = method_line_list
        self.start_opcode = ''
        self.end_opcode = ''
        self.opcode_graph = nx.DiGraph()
        self.invoke_dict = {}

    # 生成一个不考虑函数连接关系的操作码图,起始节点，终止节点
    def gen_single_opcode_graph(self):
        self.opcode_graph = single_opcode_graph_generator(self.method_line_list)

    # 生成一个考虑函数连接关系的操作码图，对应到考虑函数连接关系的第一种实现方式，非块实现方式
    def gen_connect_nonblock_opcode_graph(self):
        self.start_opcode, self.end_opcode, self.opcode_graph, self.invoke_dict = connect_opcode_graph_generator(self.method_line_list)

    # 生成一个考虑函数连接关系的操作码图，对应到考虑函数连接关系的第二种实现方式，非块实现方式
    def gen_connect_block_opcode_graph(self):
        self.start_opcode, self.end_opcode, self.opcode_graph, self.invoke_dict = block_opcode_graph_generator(self.method_name, self.method_line_list)
